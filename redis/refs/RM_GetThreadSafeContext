<def f='codebrowser/src/module.c' l='3600' ll='3616' type='RedisModuleCtx * RM_GetThreadSafeContext(RedisModuleBlockedClient * bc)'/>
<use f='codebrowser/src/module.c' l='3998' macro='1' u='r'/>
<doc f='codebrowser/src/module.c' l='3581'>/* Return a context which can be used inside threads to make Redis context
 * calls with certain modules APIs. If &apos;bc&apos; is not NULL then the module will
 * be bound to a blocked client, and it will be possible to use the
 * `RedisModule_Reply*` family of functions to accumulate a reply for when the
 * client will be unblocked. Otherwise the thread safe context will be
 * detached by a specific client.
 *
 * To call non-reply APIs, the thread safe context must be prepared with:
 *
 *     RedisModule_ThreadSafeCallStart(ctx);
 *     ... make your call here ...
 *     RedisModule_ThreadSafeCallStop(ctx);
 *
 * This is not needed when using `RedisModule_Reply*` functions, assuming
 * that a blocked client was used when the context was created, otherwise
 * no RedisModule_Reply* call should be made at all.
 *
 * TODO: thread safe contexts do not inherit the blocked client
 * selected database. */</doc>
