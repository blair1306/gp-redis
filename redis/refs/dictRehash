<dec f='codebrowser/src/dict.h' l='176' type='int dictRehash(dict * d, int n)'/>
<def f='codebrowser/src/dict.c' l='188' ll='231' type='int dictRehash(dict * d, int n)'/>
<use f='codebrowser/src/dict.c' l='245' u='c' c='dictRehashMilliseconds'/>
<use f='codebrowser/src/dict.c' l='261' u='c' c='_dictRehashStep'/>
<doc f='codebrowser/src/dict.c' l='179'>/* Performs N steps of incremental rehashing. Returns 1 if there are still
 * keys to move from the old to the new hash table, otherwise 0 is returned.
 *
 * Note that a rehashing step consists in moving a bucket (that may have more
 * than one key as we use chaining) from the old to the new hash table, however
 * since part of the hash table may be composed of empty spaces, it is not
 * guaranteed that this function will rehash even a single bucket, since it
 * will visit at max N*10 empty buckets in total, otherwise the amount of
 * work it does would be unbound and the function may block for a long time. */</doc>
