<dec f='codebrowser/src/server.h' l='1522' type='int rewriteAppendOnlyFileBackground()'/>
<use f='codebrowser/src/aof.c' l='258' u='c' c='startAppendOnly'/>
<def f='codebrowser/src/aof.c' l='1337' ll='1395' type='int rewriteAppendOnlyFileBackground()'/>
<use f='codebrowser/src/aof.c' l='1403' u='c' c='bgrewriteaofCommand'/>
<doc f='codebrowser/src/aof.c' l='1325'>/* This is how rewriting of the append only file in background works:
 *
 * 1) The user calls BGREWRITEAOF
 * 2) Redis calls this function, that forks():
 *    2a) the child rewrite the append only file in a temp file.
 *    2b) the parent accumulates differences in server.aof_rewrite_buf.
 * 3) When the child finished &apos;2a&apos; exists.
 * 4) The parent will trap the exit code, if it&apos;s OK, will append the
 *    data accumulated into server.aof_rewrite_buf into the temp file, and
 *    finally will rename(2) the temp file in the actual file name.
 *    The the new file is reopened as the new append only file. Profit!
 */</doc>
<use f='codebrowser/src/server.c' l='1039' u='c' c='serverCron'/>
<use f='codebrowser/src/server.c' l='1113' u='c' c='serverCron'/>
