<def f='codebrowser/src/quicklist.c' l='265' ll='331' type='void __quicklistCompress(const quicklist * quicklist, quicklistNode * node)'/>
<use f='codebrowser/src/quicklist.c' l='338' u='c' c='__quicklistInsertNode'/>
<use f='codebrowser/src/quicklist.c' l='596' u='c' c='__quicklistDelNode'/>
<use f='codebrowser/src/quicklist.c' l='338' u='c' c='quicklistReplaceAtIndex'/>
<use f='codebrowser/src/quicklist.c' l='338' u='c' c='_quicklistZiplistMerge'/>
<use f='codebrowser/src/quicklist.c' l='338' u='c' c='quicklistReleaseIterator'/>
<use f='codebrowser/src/quicklist.c' l='338' u='c' c='quicklistNext'/>
<doc f='codebrowser/src/quicklist.c' l='261'>/* Force &apos;quicklist&apos; to meet compression guidelines set by compress depth.
 * The only way to guarantee interior nodes get compressed is to iterate
 * to our &quot;interior&quot; compress depth then compress the next node we find.
 * If compress depth is larger than the entire list, we return immediately. */</doc>
