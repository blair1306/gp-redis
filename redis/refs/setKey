<dec f='codebrowser/src/server.h' l='1721' type='void setKey(redisDb * db, robj * key, robj * val)'/>
<use f='codebrowser/src/bitops.c' l='757' u='c' c='bitopCommand'/>
<def f='codebrowser/src/db.c' l='196' ll='205' type='void setKey(redisDb * db, robj * key, robj * val)'/>
<doc f='codebrowser/src/db.c' l='188'>/* High level Set operation. This function can be used in order to set
 * a key, whatever it was existing or not, to a new object.
 *
 * 1) The ref count of the value object is incremented.
 * 2) clients WATCHing for the destination key notified.
 * 3) The expire time of the key is reset (the key is made persistent).
 *
 * All the new keys in the database should be craeted via this interface. */</doc>
<use f='codebrowser/src/geo.c' l='660' u='c' c='georadiusGeneric'/>
<use f='codebrowser/src/module.c' l='1489' u='c' c='RM_StringSet'/>
<use f='codebrowser/src/module.c' l='1569' u='c' c='RM_StringTruncate'/>
<use f='codebrowser/src/module.c' l='2905' u='c' c='RM_ModuleTypeSetValue'/>
<use f='codebrowser/src/sort.c' l='568' u='c' c='sortCommand'/>
<use f='codebrowser/src/t_string.c' l='86' u='c' c='setGenericCommand'/>
<use f='codebrowser/src/t_string.c' l='179' u='c' c='getsetCommand'/>
<use f='codebrowser/src/t_string.c' l='326' u='c' c='msetGenericCommand'/>
