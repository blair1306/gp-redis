<dec f='codebrowser/deps/hiredis/sds.h' l='256' type='void sdsIncrLen(sds s, int incr)'/>
<def f='codebrowser/deps/hiredis/sds.c' l='312' ll='351' type='void sdsIncrLen(sds s, int incr)'/>
<doc f='codebrowser/deps/hiredis/sds.c' l='289'>/* Increment the sds length and decrements the left free space at the
 * end of the string according to &apos;incr&apos;. Also set the null term
 * in the new end of the string.
 *
 * This function is used in order to fix the string length after the
 * user calls sdsMakeRoomFor(), writes something after the end of
 * the current string, and finally needs to set the new length.
 *
 * Note: it is possible to use a negative increment in order to
 * right-trim the string.
 *
 * Usage example:
 *
 * Using sdsIncrLen() and sdsMakeRoomFor() it is possible to mount the
 * following schema, to cat bytes coming from the kernel to the end of an
 * sds string without copying into an intermediate buffer:
 *
 * oldlen = sdslen(s);
 * s = sdsMakeRoomFor(s, BUFFER_SIZE);
 * nread = read(fd, s+oldlen, BUFFER_SIZE);
 * ... check for nread &lt;= 0 and handle it ...
 * sdsIncrLen(s, nread);
 */</doc>
<dec f='codebrowser/src/sds.h' l='256' type='void sdsIncrLen(sds s, int incr)'/>
<use f='codebrowser/src/cluster.c' l='3850' u='c' c='representClusterNodeFlags'/>
<use f='codebrowser/src/hyperloglog.c' l='825' u='c' c='hllSparseAdd'/>
<use f='codebrowser/src/hyperloglog.c' l='855' u='c' c='hllSparseAdd'/>
<use f='codebrowser/src/networking.c' l='1261' u='c' c='processMultibulkBuffer'/>
<use f='codebrowser/src/networking.c' l='1398' u='c' c='readQueryFromClient'/>
<def f='codebrowser/src/sds.c' l='315' ll='354' type='void sdsIncrLen(sds s, int incr)'/>
<doc f='codebrowser/src/sds.c' l='292'>/* Increment the sds length and decrements the left free space at the
 * end of the string according to &apos;incr&apos;. Also set the null term
 * in the new end of the string.
 *
 * This function is used in order to fix the string length after the
 * user calls sdsMakeRoomFor(), writes something after the end of
 * the current string, and finally needs to set the new length.
 *
 * Note: it is possible to use a negative increment in order to
 * right-trim the string.
 *
 * Usage example:
 *
 * Using sdsIncrLen() and sdsMakeRoomFor() it is possible to mount the
 * following schema, to cat bytes coming from the kernel to the end of an
 * sds string without copying into an intermediate buffer:
 *
 * oldlen = sdslen(s);
 * s = sdsMakeRoomFor(s, BUFFER_SIZE);
 * nread = read(fd, s+oldlen, BUFFER_SIZE);
 * ... check for nread &lt;= 0 and handle it ...
 * sdsIncrLen(s, nread);
 */</doc>
