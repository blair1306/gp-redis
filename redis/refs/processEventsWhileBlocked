<dec f='codebrowser/src/server.h' l='1383' type='int processEventsWhileBlocked()'/>
<use f='codebrowser/src/aof.c' l='693' u='c' c='loadAppendOnlyFile'/>
<def f='codebrowser/src/networking.c' l='2011' ll='2022' type='int processEventsWhileBlocked()'/>
<doc f='codebrowser/src/networking.c' l='1999'>/* This function is called by Redis in order to process a few events from
 * time to time while blocked into some not interruptible operation.
 * This allows to reply to clients with the -LOADING error while loading the
 * data set at startup or after a full resynchronization with the master
 * and so forth.
 *
 * It calls the event loop in order to process a few events. Specifically we
 * try to call the event loop 4 times as long as we receive acknowledge that
 * some event was processed, in order to go forward with the accept, read,
 * write, close sequence needed to serve a client.
 *
 * The function returns the total number of events processed. */</doc>
<use f='codebrowser/src/rdb.c' l='1485' u='c' c='rdbLoadProgressCallback'/>
<use f='codebrowser/src/scripting.c' l='1198' u='c' c='luaMaskCountHook'/>
